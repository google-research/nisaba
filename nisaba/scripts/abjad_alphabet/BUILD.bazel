# Copyright 2022 Nisaba Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build packages for the abjad / alphabet language script APIs.

load(
    "//nisaba/scripts/utils:grammars.bzl",
    "nisaba_compile_grm_py",
    "nisaba_compile_multi_grm_py",
    "nisaba_compile_script_lang_multi_grm_py",
    "nisaba_grm_textproto_test",
)

package(default_visibility = ["//nisaba/scripts/abjad_alphabet:__subpackages__"])

licenses(["notice"])

# Script and language codes are used as per IANA registry:
# https://www.iana.org/assignments/language-subtag-registry
LANGS = [
    "ar",
    "azb",
    "bal",
    "ckb",
    "fa",
    "ks",
    "ms",
    "pa",
    "prs",
    "ps",
    "sd",
    "ug",
    "ur",
    "uz",
]

NORM_SCRIPT_LANGS = [("Arab", lang) for lang in LANGS]

nisaba_compile_grm_py(
    name = "reversible_roman",
    data = [
        "//nisaba/scripts/abjad_alphabet/data/Arab:reversible_roman.tsv",
        "//nisaba/scripts/abjad_alphabet/data/Arab:visual_norm.tsv",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":util",
        ":visual_norm_common",
        "//nisaba/scripts/utils:file",
        "//nisaba/scripts/utils:rewrite",
        "//nisaba/scripts/utils:rule",
        "@org_opengrm_pynini//pynini",
        "@org_opengrm_pynini//pynini/lib:byte",
    ],
)

nisaba_grm_textproto_test(
    name = "reversible_roman_test",
    grammar = ":reversible_roman",
    textproto = "testdata/reversible_roman.textproto",
)

nisaba_compile_multi_grm_py(
    name = "nfc",
    outs = {
        "byte": "nfc.far",
        "utf8": "nfc_utf8.far",
    },
    data = [
        "//nisaba/scripts/abjad_alphabet/data/Arab:nfc.tsv",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":util",
        "//nisaba/scripts/utils:rule",
        "@org_opengrm_pynini//pynini",
    ],
)

nisaba_grm_textproto_test(
    name = "nfc_test",
    grammar = ":nfc",
    textproto = "testdata/nfc.textproto",
    token_type = "byte",
)

nisaba_grm_textproto_test(
    name = "nfc_utf8_test",
    grammar = ":nfc_utf8",
    textproto = "testdata/nfc.textproto",
    token_type = "utf8",
)

py_library(
    name = "visual_norm_common",
    srcs = ["visual_norm_common.py"],
    data = [
        "//nisaba/scripts/abjad_alphabet/data/Arab:nfc.tsv",
        "//nisaba/scripts/abjad_alphabet/data/Arab:presentation_forms.tsv",
        "//nisaba/scripts/abjad_alphabet/data/Arab:visual_norm.tsv",
    ],
    deps = [
        ":util",
        "//nisaba/scripts/utils:rule",
        "@org_opengrm_pynini//pynini",
    ],
)

nisaba_compile_script_lang_multi_grm_py(
    name = "visual_norm",
    data_per_lang = [
        "visual_norm_final_isolated",
        "visual_norm_isolated",
        "visual_norm_nonfinal",
    ],
    family = "abjad_alphabet",
    script_langs = NORM_SCRIPT_LANGS,
    deps = [
        ":util",
        ":visual_norm_common",
        "//nisaba/scripts/utils:file",
        "//nisaba/scripts/utils:rewrite",
        "//nisaba/scripts/utils:rule",
        "@io_abseil_py//absl/flags",
        "@org_opengrm_pynini//pynini",
    ],
)

nisaba_compile_script_lang_multi_grm_py(
    name = "reading_norm",
    data_per_script = [
        "nfc",
        "presentation_forms",
    ],
    family = "abjad_alphabet",
    script_langs = NORM_SCRIPT_LANGS,
    deps = [
        ":util",
        "//nisaba/scripts/utils:rule",
        "@io_abseil_py//absl/flags",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "fst_properties_test",
    timeout = "long",
    srcs = ["fst_properties_test.py"],
    data = [
        ":nfc.far",
        ":nfc_utf8.far",
        ":reading_norm.far",
        ":reading_norm_utf8.far",
        ":reversible_roman.far",
        ":visual_norm.far",
        ":visual_norm_utf8.far",
    ],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":util",
        "//nisaba/scripts/utils:file",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
        "@io_abseil_py//absl/testing:parameterized",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "randgen_test",
    size = "enormous",
    srcs = ["randgen_test.py"],
    data = [
        ":nfc.far",
        ":nfc_utf8.far",
        ":reading_norm.far",
        ":reading_norm_utf8.far",
        ":reversible_roman.far",
        ":visual_norm.far",
        ":visual_norm_utf8.far",
    ],
    python_version = "PY3",
    # Set to be the number of parametrized tests.
    srcs_version = "PY3",
    deps = [
        ":util",
        "//nisaba/scripts/utils:file",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/logging",
        "@io_abseil_py//absl/testing:absltest",
        "@io_abseil_py//absl/testing:parameterized",
        "@org_opengrm_pynini//pynini",
    ],
)

py_library(
    name = "util",
    srcs = ["util.py"],
    data = [
        "//nisaba/scripts/abjad_alphabet/data/Arab:{}.tsv".format(fst)
        for fst in [
            "nfc",
            "presentation_forms",
            "reversible_roman",
        ]
    ] + [
        "//nisaba/scripts/abjad_alphabet/data/Arab/{}:{}.tsv".format(lang, fst)
        for lang in LANGS
        for fst in [
            "reading_norm",
            "visual_norm",
            "visual_norm_final_isolated",
            "visual_norm_isolated",
            "visual_norm_nonfinal",
        ]
    ],
    srcs_version = "PY3",
    deps = [
        "//nisaba/scripts/utils:char",
        "//nisaba/scripts/utils:file",
        "@org_opengrm_pynini//pynini",
    ],
)

py_library(
    name = "py_api",
    srcs = ["__init__.py"],
    data = [
        ":nfc.far",
        ":reading_norm.far",
        ":reversible_roman.far",
        ":visual_norm.far",
    ],
    srcs_version = "PY3",
    visibility = ["//visibility:public"],
    deps = [
        ":util",
        "//nisaba/scripts/utils:far",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "py_api_test",
    size = "small",
    srcs = ["api_test.py"],
    main = "api_test.py",
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":py_api",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

py_test(
    name = "reversible_roman_coverage_test",
    size = "medium",
    timeout = "long",
    srcs = ["reversible_roman_coverage_test.py"],
    data = [
        ":reversible_roman.far",
        "//nisaba/scripts/abjad_alphabet/data/Arab:letter_languages.textproto",
        "//nisaba/scripts/abjad_alphabet/data/Arab:reversible_roman.textproto",
    ],
    main = "reversible_roman_coverage_test.py",
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":util",
        "//nisaba/scripts/utils:file",
        "//nisaba/scripts/utils:letter_languages",
        "//nisaba/scripts/utils:test_util",
        "//nisaba/scripts/utils:unicode_strings_util",
        "@io_abseil_py//absl/testing:absltest",
        "@org_opengrm_pynini//pynini",
    ],
)
