# Copyright 2022 Nisaba Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load(
    "//nisaba/scripts/utils:grammars.bzl",
    "nisaba_compile_multi_grm_py",
)

package(default_visibility = ["//nisaba/scripts/brahmic:__subpackages__"])

licenses(["notice"])

py_library(
    name = "constants",
    srcs = ["constants.py"],
    deps = ["@org_opengrm_pynini//pynini/lib:byte"],
)

py_library(
    name = "iso2typ",
    srcs = ["iso2typ.py"],
    deps = [
        ":constants",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "iso2typ_test_py",
    srcs = ["iso2typ_test.py"],
    main = "iso2typ_test.py",
    deps = [
        ":iso2typ",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

py_library(
    name = "typ2txn",
    srcs = ["typ2txn.py"],
    deps = [
        ":constants",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "typ2txn_test_py",
    srcs = ["typ2txn_test.py"],
    main = "typ2txn_test.py",
    deps = [
        ":typ2txn",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

py_library(
    name = "phon_ops",
    srcs = ["phon_ops.py"],
    deps = [
        ":constants",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "phon_ops_test_py",
    srcs = ["phon_ops_test.py"],
    main = "phon_ops_test.py",
    deps = [
        ":phon_ops",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

py_library(
    name = "txn2nat",
    srcs = ["txn2nat.py"],
    deps = [
        ":constants",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "txn2nat_test_py",
    srcs = ["txn2nat_test.py"],
    main = "txn2nat_test.py",
    deps = [
        ":txn2nat",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

nisaba_compile_multi_grm_py(
    name = "hi_e2e",
    outs = {
        "byte": "hi_e2e.far",
        "utf8": "hi_e2e_utf8.far",
    },
    visibility = ["//visibility:public"],
    deps = [
        ":iso2typ",
        ":phon_ops",
        ":txn2nat",
        ":typ2txn",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "hi_e2e_test_py",
    srcs = ["hi_e2e_test.py"],
    main = "hi_e2e_test.py",
    deps = [
        ":_hi_e2e_lib",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

nisaba_compile_multi_grm_py(
    name = "kn_e2e",
    outs = {
        "byte": "kn_e2e.far",
        "utf8": "kn_e2e_utf8.far",
    },
    visibility = ["//visibility:public"],
    deps = [
        ":iso2typ",
        ":phon_ops",
        ":txn2nat",
        ":typ2txn",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "kn_e2e_test_py",
    srcs = ["kn_e2e_test.py"],
    main = "kn_e2e_test.py",
    deps = [
        ":_kn_e2e_lib",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

nisaba_compile_multi_grm_py(
    name = "ml_e2e",
    outs = {
        "byte": "ml_e2e.far",
        "utf8": "ml_e2e_utf8.far",
    },
    visibility = ["//visibility:public"],
    deps = [
        ":iso2typ",
        ":phon_ops",
        ":txn2nat",
        ":typ2txn",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "ml_e2e_test_py",
    srcs = ["ml_e2e_test.py"],
    main = "ml_e2e_test.py",
    deps = [
        ":_ml_e2e_lib",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

nisaba_compile_multi_grm_py(
    name = "te_e2e",
    outs = {
        "byte": "te_e2e.far",
        "utf8": "te_e2e_utf8.far",
    },
    visibility = ["//visibility:public"],
    deps = [
        ":iso2typ",
        ":phon_ops",
        ":txn2nat",
        ":typ2txn",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "te_e2e_test_py",
    srcs = ["te_e2e_test.py"],
    main = "te_e2e_test.py",
    deps = [
        ":_te_e2e_lib",
        "//nisaba/scripts/utils:test_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)
