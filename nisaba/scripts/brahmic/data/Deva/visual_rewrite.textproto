# Copyright 2023 Nisaba Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# proto-file: nisaba/scripts/utils/unicode_strings.proto
# proto-message: nisaba.UnicodeStrings

######################################
# Rewrites from Unicode standards text

# Devanagari Vowel Letters
# Unicode Standard Version 12.0: Chapter 12.1: Table 12-1

item {
  uname: ["A", "SIGN SHORT E"] raw: "अॆ"
  to_uname: "SHORT A" to_raw: "ऄ"
}
item {
  uname: ["A", "SIGN AA"] raw: "अा"
  to_uname: "AA" to_raw: "आ"
}
item {
  uname: ["RA", "VIRAMA", "I"] raw: "र्इ"
  to_uname: "II" to_raw: "ई"
}

# TODO: I haven't seen any font at all that renders this example the
# same, so maybe should be dropped, though it is listed in The Unicode Standard.
item {
  uname: ["U", "SIGN U"] raw: "उु"
  to_uname: "UU" to_raw: "ऊ"
}

item {
  uname: ["E", "SIGN CANDRA E"] raw: "एॅ"
  to_uname: "CANDRA E" to_raw: "ऍ"
}
item {
  uname: ["E", "SIGN SHORT E"] raw: "एॆ"
  to_uname: "SHORT E" to_raw: "ऎ"
}
item {
  uname: ["E", "SIGN E"] raw: "एे"
  to_uname: "AI" to_raw: "ऐ"
}

item {
  uname: ["A", "SIGN AA", "SIGN CANDRA E"] raw: "अाॅ"
  to_uname: "CANDRA O" to_raw: "ऑ"
}
item {
  uname: ["AA", "SIGN CANDRA E"] raw: "आॅ"
  to_uname: "CANDRA O" to_raw: "ऑ"
}

item {
  uname: ["A", "SIGN SHORT O"] raw: "अॊ"
  to_uname: "SHORT O" to_raw: "ऒ"
}
item {
  uname: ["AA", "SIGN SHORT E"] raw: "आॆ"
  to_uname: "SHORT O" to_raw: "ऒ"
}

item {
  uname: ["A", "SIGN O"] raw: "अो"
  to_uname: "O" to_raw: "ओ"
}
item {
  uname: ["AA", "SIGN E"] raw: "आे"
  to_uname: "O" to_raw: "ओ"
}

item {
  uname: ["A", "SIGN AA", "SIGN AI"] raw: "अाै"
  to_uname: "AU" to_raw: "औ"
}
item {
  uname: ["AA", "SIGN AI"] raw: "आै"
  to_uname: "AU" to_raw: "औ"
}

item {
  uname: ["A", "SIGN CANDRA E"] raw: "अॅ"
  to_uname: "CANDRA A" to_raw: "ॲ"
}
item {
  uname: ["A", "SIGN OE"] raw: "अऺ"
  to_uname: "OE" to_raw: "ॳ"
}
item {
  uname: ["A", "SIGN AA", "SIGN OE"] raw: "अाऺ"
  to_uname: "OOE" to_raw: "ॴ"
}
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "ॵꣿ"
  to_uname: "AW" to_raw: "ॵ"
}
item {
  uname: ["A", "SIGN UE"] raw: "अॖ"
  to_uname: "UE" to_raw: "ॶ"
}
item {
  uname: ["A", "SIGN UUE"] raw: "अॗ"
  to_uname: "UUE" to_raw: "ॷ"
}

# Devanagari Atomic Consonants
# Unicode Standard Version 12.0: Chapter 12.1: Table 12-2

item {
  uname: ["KHA", "VIRAMA", "SIGN AA"] raw: "ख्ा"
  to_uname: "KHA" to_raw: "ख"
}
item {
  uname: ["KHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ख्‍ा"
  to_uname: "KHA" to_raw: "ख"
}
item {
  uname: ["GA", "VIRAMA", "SIGN AA"] raw: "ग्ा"
  to_uname: "GA" to_raw: "ग"
}
item {
  uname: ["GA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ग्‍ा"
  to_uname: "GA" to_raw: "ग"
}
item {
  uname: ["GHA", "VIRAMA", "SIGN AA"] raw: "घ्ा"
  to_uname: "GHA" to_raw: "घ"
}
item {
  uname: ["GHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "घ्‍ा"
  to_uname: "GHA" to_raw: "घ"
}
item {
  uname: ["CA", "VIRAMA", "SIGN AA"] raw: "च्ा"
  to_uname: "CA" to_raw: "च"
}
item {
  uname: ["CA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "च्‍ा"
  to_uname: "CA" to_raw: "च"
}
item {
  uname: ["JA", "VIRAMA", "SIGN AA"] raw: "ज्ा"
  to_uname: "JA" to_raw: "ज"
}
item {
  uname: ["JA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ज्‍ा"
  to_uname: "JA" to_raw: "ज"
}
item {
  uname: ["JHA", "VIRAMA", "SIGN AA"] raw: "झ्ा"
  to_uname: "JHA" to_raw: "झ"
}
item {
  uname: ["JHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "झ्‍ा"
  to_uname: "JHA" to_raw: "झ"
}
item {
  uname: ["NYA", "VIRAMA", "SIGN AA"] raw: "ञ्ा"
  to_uname: "NYA" to_raw: "ञ"
}
item {
  uname: ["NYA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ञ्‍ा"
  to_uname: "NYA" to_raw: "ञ"
}
item {
  uname: ["NNA", "VIRAMA", "SIGN AA"] raw: "ण्ा"
  to_uname: "NNA" to_raw: "ण"
}
item {
  uname: ["NNA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ण्‍ा"
  to_uname: "NNA" to_raw: "ण"
}
item {
  uname: ["TA", "VIRAMA", "SIGN AA"] raw: "त्ा"
  to_uname: "TA" to_raw: "त"
}
item {
  uname: ["TA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "त्‍ा"
  to_uname: "TA" to_raw: "त"
}
item {
  uname: ["THA", "VIRAMA", "SIGN AA"] raw: "थ्ा"
  to_uname: "THA" to_raw: "थ"
}
item {
  uname: ["THA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "थ्‍ा"
  to_uname: "THA" to_raw: "थ"
}
item {
  uname: ["DHA", "VIRAMA", "SIGN AA"] raw: "ध्ा"
  to_uname: "DHA" to_raw: "ध"
}
item {
  uname: ["DHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ध्‍ा"
  to_uname: "DHA" to_raw: "ध"
}
item {
  uname: ["NA", "VIRAMA", "SIGN AA"] raw: "न्ा"
  to_uname: "NA" to_raw: "न"
}
item {
  uname: ["NA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "न्‍ा"
  to_uname: "NA" to_raw: "न"
}
item {
  uname: ["NNNA", "VIRAMA", "SIGN AA"] raw: "ऩ्ा"
  to_uname: "NNNA" to_raw: "ऩ"
}
item {
  uname: ["NNNA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ऩ्‍ा"
  to_uname: "NNNA" to_raw: "ऩ"
}
item {
  uname: ["NA", "NUKTA", "VIRAMA", "SIGN AA"] raw: "ऩ्ा"
  to_uname: "NNNA" to_raw: "ऩ"
}
item {
  uname: ["NA", "NUKTA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ऩ्‍ा"
  to_uname: "NNNA" to_raw: "ऩ"
}
item {
  uname: ["PA", "VIRAMA", "SIGN AA"] raw: "प्ा"
  to_uname: "PA" to_raw: "प"
}
item {
  uname: ["PA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "प्‍ा"
  to_uname: "PA" to_raw: "प"
}
item {
  uname: ["BA", "VIRAMA", "SIGN AA"] raw: "ब्ा"
  to_uname: "BA" to_raw: "ब"
}
item {
  uname: ["BA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ब्‍ा"
  to_uname: "BA" to_raw: "ब"
}
item {
  uname: ["BHA", "VIRAMA", "SIGN AA"] raw: "भ्ा"
  to_uname: "BHA" to_raw: "भ"
}
item {
  uname: ["BHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "भ्‍ा"
  to_uname: "BHA" to_raw: "भ"
}
item {
  uname: ["MA", "VIRAMA", "SIGN AA"] raw: "म्ा"
  to_uname: "MA" to_raw: "म"
}
item {
  uname: ["MA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "म्‍ा"
  to_uname: "MA" to_raw: "म"
}
item {
  uname: ["YA", "VIRAMA", "SIGN AA"] raw: "य्ा"
  to_uname: "YA" to_raw: "य"
}
item {
  uname: ["YA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "य्‍ा"
  to_uname: "YA" to_raw: "य"
}
item {
  uname: ["LA", "VIRAMA", "SIGN AA"] raw: "ल्ा"
  to_uname: "LA" to_raw: "ल"
}
item {
  uname: ["LA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ल्‍ा"
  to_uname: "LA" to_raw: "ल"
}
item {
  uname: ["VA", "VIRAMA", "SIGN AA"] raw: "व्ा"
  to_uname: "VA" to_raw: "व"
}
item {
  uname: ["VA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "व्‍ा"
  to_uname: "VA" to_raw: "व"
}
item {
  uname: ["SHA", "VIRAMA", "SIGN AA"] raw: "श्ा"
  to_uname: "SHA" to_raw: "श"
}
item {
  uname: ["SHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "श्‍ा"
  to_uname: "SHA" to_raw: "श"
}
item {
  uname: ["SSA", "VIRAMA", "SIGN AA"] raw: "ष्ा"
  to_uname: "SSA" to_raw: "ष"
}
item {
  uname: ["SSA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ष्‍ा"
  to_uname: "SSA" to_raw: "ष"
}
item {
  uname: ["SA", "VIRAMA", "SIGN AA"] raw: "स्ा"
  to_uname: "SA" to_raw: "स"
}
item {
  uname: ["SA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "स्‍ा"
  to_uname: "SA" to_raw: "स"
}
item {
  uname: ["KHHA", "VIRAMA", "SIGN AA"] raw: "ख़्ा"
  to_uname: "KHHA" to_raw: "ख़"
}
item {
  uname: ["KHHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ख़्‍ा"
  to_uname: "KHHA" to_raw: "ख़"
}
item {
  uname: ["KHA", "NUKTA", "VIRAMA", "SIGN AA"] raw: "ख़्ा"
  to_uname: "KHHA" to_raw: "ख़"
}
item {
  uname: ["KHA", "NUKTA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ख़्‍ा"
  to_uname: "KHHA" to_raw: "ख़"
}
item {
  uname: ["GHHA", "VIRAMA", "SIGN AA"] raw: "ग़्ा"
  to_uname: "GHHA" to_raw: "ग़"
}
item {
  uname: ["GHHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ग़्‍ा"
  to_uname: "GHHA" to_raw: "ग़"
}
item {
  uname: ["GA", "NUKTA", "VIRAMA", "SIGN AA"] raw: "ग़्ा"
  to_uname: "GHHA" to_raw: "ग़"
}
item {
  uname: ["GA", "NUKTA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ग़्‍ा"
  to_uname: "GHHA" to_raw: "ग़"
}
item {
  uname: ["ZA", "VIRAMA", "SIGN AA"] raw: "ज़्ा"
  to_uname: "ZA" to_raw: "ज़"
}
item {
  uname: ["ZA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ज़्‍ा"
  to_uname: "ZA" to_raw: "ज़"
}
item {
  uname: ["JA", "NUKTA", "VIRAMA", "SIGN AA"] raw: "ज़्ा"
  to_uname: "ZA" to_raw: "ज़"
}
item {
  uname: ["JA", "NUKTA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ज़्‍ा"
  to_uname: "ZA" to_raw: "ज़"
}
item {
  uname: ["YYA", "VIRAMA", "SIGN AA"] raw: "य़्ा"
  to_uname: "YYA" to_raw: "य़"
}
item {
  uname: ["YYA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "य़्‍ा"
  to_uname: "YYA" to_raw: "य़"
}
item {
  uname: ["YA", "NUKTA", "VIRAMA", "SIGN AA"] raw: "य़्ा"
  to_uname: "YYA" to_raw: "य़"
}
item {
  uname: ["YA", "NUKTA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "य़्‍ा"
  to_uname: "YYA" to_raw: "य़"
}
item {
  uname: ["ZHA", "VIRAMA", "SIGN AA"] raw: "ॹ्ा"
  to_uname: "ZHA" to_raw: "ॹ"
}
item {
  uname: ["ZHA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ॹ्‍ा"
  to_uname: "ZHA" to_raw: "ॹ"
}
item {
  uname: ["HEAVY YA", "VIRAMA", "SIGN AA"] raw: "ॺ्ा"
  to_uname: "HEAVY YA" to_raw: "ॺ"
}
item {
  uname: ["HEAVY YA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ॺ्‍ा"
  to_uname: "HEAVY YA" to_raw: "ॺ"
}
item {
  uname: ["GGA", "VIRAMA", "SIGN AA"] raw: "ॻ्ा"
  to_uname: "GGA" to_raw: "ॻ"
}
item {
  uname: ["GGA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ॻ्‍ा"
  to_uname: "GGA" to_raw: "ॻ"
}
item {
  uname: ["JJA", "VIRAMA", "SIGN AA"] raw: "ॼ्ा"
  to_uname: "JJA" to_raw: "ॼ"
}
item {
  uname: ["JJA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ॼ्‍ा"
  to_uname: "JJA" to_raw: "ॼ"
}
item {
  uname: ["DDDA", "VIRAMA", "SIGN AA"] raw: "ॾ्ा"
  to_uname: "DDDA" to_raw: "ॾ"
}
item {
  uname: ["DDDA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ॾ्‍ा"
  to_uname: "DDDA" to_raw: "ॾ"
}
item {
  uname: ["BBA", "VIRAMA", "SIGN AA"] raw: "ॿ्ा"
  to_uname: "BBA" to_raw: "ॿ"
}
item {
  uname: ["BBA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "ॿ्‍ा"
  to_uname: "BBA" to_raw: "ॿ"
}

# Devanagari Consonant Conjuncts
# Unicode Standard Version 12.0: Chapter 12.1: Table 12-3

item {
  uname: ["KA", "VIRAMA", "CA", "VIRAMA", "SIGN AA"] raw: "क्च्ा"
  to_uname: ["KA", "VIRAMA", "CA"] to_raw: "क्च"
}
item {
  uname: ["KA", "VIRAMA", "CA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "क्च्‍ा"
  to_uname: ["KA", "VIRAMA", "CA"] to_raw: "क्च"
}

item {
  uname: ["KA", "VIRAMA", "SSA", "VIRAMA", "SIGN AA"] raw: "क्ष्ा"
  to_uname: ["KA", "VIRAMA", "SSA"] to_raw: "क्ष"
}
item {
  uname: ["KA", "VIRAMA", "SSA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "क्ष्‍ा"
  to_uname: ["KA", "VIRAMA", "SSA"] to_raw: "क्ष"
}

item {
  uname: ["TA", "VIRAMA", "TA", "VIRAMA", "SIGN AA"] raw: "त्त्ा"
  to_uname: ["TA", "VIRAMA", "TA"] to_raw: "त्त"
}
item {
  uname: ["TA", "VIRAMA", "TA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "त्त्‍ा"
  to_uname: ["TA", "VIRAMA", "TA"] to_raw: "त्त"
}

item {
  uname: ["NA", "VIRAMA", "TA", "VIRAMA", "SIGN AA"] raw: "न्त्ा"
  to_uname: ["NA", "VIRAMA", "TA"] to_raw: "न्त"
}
item {
  uname: ["NA", "VIRAMA", "TA", "VIRAMA", "ZERO WIDTH JOINER", "SIGN AA"] raw: "न्त्‍ा"
  to_uname: ["NA", "VIRAMA", "TA"] to_raw: "न्त"
}

# RA + Vocalic Letter Ligature Forms
# Unicode Standard Version 12.0: Chapter 12.1: Table 12-6
# RA, VIRAMA, LETTER VOCALIC (R, RR, L, LL) → RA, SIGN VOCALIC (R, RR, L, LL)

item {
  uname: ["RA", "VIRAMA", "VOCALIC R"] raw: "र्ऋ"
  to_uname: ["RA", "SIGN VOCALIC R"] to_raw: "रृ"
}
item {
  uname: ["RA", "VIRAMA", "VOCALIC RR"] raw: "र्ॠ"
  to_uname: ["RA", "SIGN VOCALIC RR"] to_raw: "रॄ"
}
item {
  uname: ["RA", "VIRAMA", "VOCALIC L"] raw: "र्ऌ"
  to_uname: ["RA", "SIGN VOCALIC L"] to_raw: "रॢ"
}
item {
  uname: ["RA", "VIRAMA", "VOCALIC LL"] raw: "र्ॡ"
  to_uname: ["RA", "SIGN VOCALIC LL"] to_raw: "रॣ"
}

# Eyelash reph: RA, VIRAMA, ZWJ → RRA, VIRAMA
# Unicode Standard Version 12.0: Chapter 12.1: Dead Consonant Rule: R5, R5a

item {
  uname: ["RA", "VIRAMA", "ZERO WIDTH JOINER"] raw: "र्‍"
  to_uname: ["RRA", "VIRAMA"] to_raw: "ऱ्"
}

###############################################################
# Additional Rewrites for the usages found in the web documents

# Additional look alikes for the above
item {
  uname: ["A", "SIGN E"] raw: "अे"
  to_uname: "SHORT A" to_raw: "ऄ"
}

# Decompositions using ZWJ for the above
item {
  uname: ["A", "ZERO WIDTH JOINER", "SIGN OE"] raw: "अ‍ऺ"
  to_uname: "OE" to_raw: "ॳ"
}
item {
  uname: ["A", "ZERO WIDTH JOINER", "SIGN CANDRA E"] raw: "अ‍ॅ"
  to_uname: "CANDRA A" to_raw: "ॲ"
}
item {
  uname: ["A", "ZERO WIDTH JOINER", "SIGN SHORT E"] raw: "अ‍ॆ"
  to_uname: "SHORT A" to_raw: "ऄ"
}
item {
  uname: ["A", "ZERO WIDTH JOINER", "SIGN UE"] raw: "अ‍ॖ"
  to_uname: "UE" to_raw: "ॶ"
}
item {
  uname: ["A", "ZERO WIDTH JOINER", "SIGN UUE"] raw: "अ‍ॗ"
  to_uname: "UUE" to_raw: "ॷ"
}
item {
  uname: ["A", "ZERO WIDTH JOINER", "SIGN AA"] raw: "अ‍ा"
  to_uname: "AA" to_raw: "आ"
}

# CANDRA A, SIGN (ANUSVARA|CANDRABINDU) → A, SIGN CANDRABINDU
item {
  uname: ["CANDRA A", "SIGN ANUSVARA"] raw: "ॲं"
  to_uname: ["A", "SIGN CANDRABINDU"] to_raw: "अँ"
}
item {
  uname: ["CANDRA A", "SIGN CANDRABINDU"] raw: "ॲँ"
  to_uname: ["A", "SIGN CANDRABINDU"] to_raw: "अँ"
}

# A, SIGN CANDRA E, SIGN (ANUSVARA|CANDRABINDU) → A, SIGN CANDRABINDU
item {
  uname: ["A", "SIGN CANDRA E", "SIGN ANUSVARA"] raw: "अॅं"
  to_uname: ["A", "SIGN CANDRABINDU"] to_raw: "अँ"
}
item {
  uname: ["A", "SIGN CANDRA E", "SIGN CANDRABINDU"] raw: "अॅँ"
  to_uname: ["A", "SIGN CANDRABINDU"] to_raw: "अँ"
}

# A, SIGN (AU|OOE|AW) → AU|OOE|AW
item {
  uname: ["A", "SIGN AU"] raw: "अौ"
  to_uname: "AU" to_raw: "औ"
}
item {
  uname: ["A", "SIGN OOE"] raw: "अऻ"
  to_uname: "OOE" to_raw: "ॴ"
}
item {
  uname: ["A", "SIGN AW"] raw: "अॏ"
  to_uname: "AW" to_raw: "ॵ"
}

# AA, SIGN (OE|AY) → OOE|AW
item {
  uname: ["AA", "SIGN OE"] raw: "आऺ"
  to_uname: "OOE" to_raw: "ॴ"
}
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "आꣿ"
  to_uname: "AW" to_raw: "ॵ"
}

# A, SIGN AA, SIGN (Candra E|Short E|E|AY) → Candra O|Short O|O|AW
item {
  uname: ["A", "SIGN CANDRA O"] raw: "अॉ"
  to_uname: "CANDRA O" to_raw: "ऑ"
}
item {
  uname: ["A", "SIGN AA", "SIGN SHORT E"] raw: "अाॆ"
  to_uname: "SHORT O" to_raw: "ऒ"
}
item {
  uname: ["A", "SIGN AA", "SIGN E"] raw: "अाे"
  to_uname: "O" to_raw: "ओ"
}
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "अाꣿ"
  to_uname: "AW" to_raw: "ॵ"
}

# CANDRA O, SIGN (ANUSVARA|CANDRABINDU) → AA, SIGN CANDRABINDU
item {
  uname: ["CANDRA O", "SIGN ANUSVARA"] raw: "ऑं"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}
item {
  uname: ["CANDRA O", "SIGN CANDRABINDU"] raw: "ऑँ"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}

# A, SIGN CANDRA O, SIGN (ANUSVARA|CANDRABINDU) → AA, SIGN CANDRABINDU
item {
  uname: ["A", "SIGN CANDRA O", "SIGN ANUSVARA"] raw: "अॉं"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}
item {
  uname: ["A", "SIGN CANDRA O", "SIGN CANDRABINDU"] raw: "अॉँ"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}

# AA, SIGN CANDRA E, SIGN (ANUSVARA|CANDRABINDU) → AA, SIGN CANDRABINDU
item {
  uname: ["AA", "SIGN CANDRA E", "SIGN ANUSVARA"] raw: "आॅं"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}
item {
  uname: ["AA", "SIGN CANDRA E", "SIGN CANDRABINDU"] raw: "आॅँ"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}

# A, SIGN AA, SIGN CANDRA E, SIGN (ANUSVARA|CANDRABINDU) → AA, SIGN CANDRABINDU
item {
  uname: ["A", "SIGN AA", "SIGN CANDRA E", "SIGN ANUSVARA"] raw: "अाॅं"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}
item {
  uname: ["A", "SIGN AA", "SIGN CANDRA E", "SIGN CANDRABINDU"] raw: "अाॅँ"
  to_uname: ["AA", "SIGN CANDRABINDU"] to_raw: "आँ"
}

# E, SIGN AY → AY
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "एꣿ"
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  to_raw: "ꣾ"
}

# CANDRA E, SIGN (ANUSVARA|CANDRABINDU) → E, SIGN CANDRABINDU
item {
  uname: ["CANDRA E", "SIGN ANUSVARA"] raw: "ऍं"
  to_uname: ["E", "SIGN CANDRABINDU"] to_raw: "एँ"
}
item {
  uname: ["CANDRA E", "SIGN CANDRABINDU"] raw: "ऍँ"
  to_uname: ["E", "SIGN CANDRABINDU"] to_raw: "एँ"
}

# E, SIGN CANDRA E, SIGN (ANUSVARA|CANDRABINDU) → E, SIGN CANDRABINDU
item {
  uname: ["E", "SIGN CANDRA E", "SIGN ANUSVARA"] raw: "एॅं"
  to_uname: ["E", "SIGN CANDRABINDU"] to_raw: "एँ"
}
item {
  uname: ["E", "SIGN CANDRA E", "SIGN CANDRABINDU"] raw: "एॅँ"
  to_uname: ["E", "SIGN CANDRABINDU"] to_raw: "एँ"
}

# Sign Interaction Representation Visual Norm

# COMBINING CANDRABINDU → SIGN CANDRABINDU
item {
  uname: "COMBINING CANDRABINDU" raw: "̐"
  to_uname: "SIGN CANDRABINDU" to_raw: "ँ"
}

# SIGN CANDRA E, SIGN (ANUSVARA|CANDRABINDU) → SIGN CANDRABINDU
item {
  uname: ["SIGN CANDRA E", "SIGN ANUSVARA"] raw: "ॅं"
  to_uname: "SIGN CANDRABINDU" to_raw: "ँ"
}
item {
  uname: ["SIGN CANDRA E", "SIGN CANDRABINDU"] raw: "ॅँ"
  to_uname: "SIGN CANDRABINDU" to_raw: "ँ"
}

# SIGN CANDRA O, SIGN (ANUSVARA|CANDRABINDU) → SIGN AA, SIGN CANDRABINDU
item {
  uname: ["SIGN CANDRA O", "SIGN ANUSVARA"] raw: "ॉं"
  to_uname: ["SIGN AA", "SIGN CANDRABINDU"] to_raw: "ाँ"
}
item {
  uname: ["SIGN CANDRA O", "SIGN CANDRABINDU"] raw: "ॉँ"
  to_uname: ["SIGN AA", "SIGN CANDRABINDU"] to_raw: "ाँ"
}

# SIGN A, SIGN CANDRA E, SIGN (ANUSVARA|CANDRABINDU) → SIGN AA, SIGN CANDRABINDU
item {
  uname: ["SIGN AA", "SIGN CANDRA E", "SIGN ANUSVARA"] raw: "ाॅं"
  to_uname: ["SIGN AA", "SIGN CANDRABINDU"] to_raw: "ाँ"
}
item {
  uname: ["SIGN AA", "SIGN CANDRA E", "SIGN CANDRABINDU"] raw: "ाॅँ"
  to_uname: ["SIGN AA", "SIGN CANDRABINDU"] to_raw: "ाँ"
}

# SIGN AA, SIGN (Candra E|Short E|E|AI|OE|AY) → SIGN (Candra O|Short O|O|AU|OOE|AW)
item {
  uname: ["SIGN AA", "SIGN CANDRA E"] raw: "ाॅ"
  to_uname: "SIGN CANDRA O" to_raw: "ॉ"
}
item {
  uname: ["SIGN AA", "SIGN SHORT E"] raw: "ाॆ"
  to_uname: "SIGN SHORT O" to_raw: "ॊ"
}
item {
  uname: ["SIGN AA", "SIGN E"] raw: "ाे"
  to_uname: "SIGN O" to_raw: "ो"
}
item {
  uname: ["SIGN AA", "SIGN AI"] raw: "ाै"
  to_uname: "SIGN AU" to_raw: "ौ"
}
item {
  uname: ["SIGN AA", "SIGN OE"] raw: "ाऺ"
  to_uname: "SIGN OOE" to_raw: "ऻ"
}
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "ाꣿ"
  to_uname: "SIGN AW" to_raw: "ॏ"
}

# Above sequences with order reversed
# SIGN (Candra E|Short E|E|AI|OE|AY), SIGN AA → SIGN (Candra O|Short O|O|AU|OOE|AW)
item {
  uname: ["SIGN CANDRA E", "SIGN AA"] raw: "ॅा"
  to_uname: "SIGN CANDRA O" to_raw: "ॉ"
}
item {
  uname: ["SIGN SHORT E", "SIGN AA"] raw: "ॆा"
  to_uname: "SIGN SHORT O" to_raw: "ॊ"
}
item {
  uname: ["SIGN E", "SIGN AA"] raw: "ेा"
  to_uname: "SIGN O" to_raw: "ो"
}
item {
  uname: ["SIGN AI", "SIGN AA"] raw: "ैा"
  to_uname: "SIGN AU" to_raw: "ौ"
}
item {
  uname: ["SIGN OE", "SIGN AA"] raw: "ऺा"
  to_uname: "SIGN OOE" to_raw: "ऻ"
}
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "ꣿा"
  to_uname: "SIGN AW" to_raw: "ॏ"
}

# VIRAMA, NUKTA → NUKTA, VIRAMA
item {
  uname: ["VIRAMA", "NUKTA"] raw: "़्"
  to_uname: ["NUKTA", "VIRAMA"] to_raw: "़्"
}

# (GA|JA|DA|BA), ANUDATTA → GGA|JJA|DDDA|BBA
item {
  uname: ["GA", "STRESS SIGN ANUDATTA"] raw: "ग॒"
  to_uname: "GGA" to_raw: "ॻ"
}
item {
  uname: ["JA", "STRESS SIGN ANUDATTA"] raw: "ज॒"
  to_uname: "JJA" to_raw: "ॼ"
}
item {
  uname: ["DDA", "STRESS SIGN ANUDATTA"] raw: "ड॒"
  to_uname: "DDDA" to_raw: "ॾ"
}
item {
  uname: ["BA", "STRESS SIGN ANUDATTA"] raw: "ब॒"
  to_uname: "BBA" to_raw: "ॿ"
}

## Soft overlaps:
# SIGN E overlapping over other signs
item {
  uname: ["SIGN E", "SIGN I"] raw: "ेि"
  to_uname: "SIGN I" to_raw: "ि"
}
item {
  uname: ["SIGN E", "SIGN CANDRA E"] raw: "ेॅ"
  to_uname: "SIGN CANDRA E" to_raw: "ॅ"
}
item {
  uname: ["SIGN E", "SIGN AI"] raw: "ेै"
  to_uname: "SIGN AI" to_raw: "ै"
}

# AU, SIGN E → AU
item {
  uname: ["AU", "SIGN E"] raw: "औे"
  to_uname: "AU" to_raw: "औ"
}

## Totally invisible repeats

# (Candra E|Short E|AI|AY), SIGN (Candra E|Short E|E|AY) → Candra E|Short E|AI|AY
item {
  uname: ["CANDRA E", "SIGN CANDRA E"] raw: "ऍॅ"
  to_uname: "CANDRA E" to_raw: "ऍ"
}
item {
  uname: ["SHORT E", "SIGN SHORT E"] raw: "ऎॆ"
  to_uname: "SHORT E" to_raw: "ऎ"
}
item {
  uname: ["AI", "SIGN E"] raw: "ऐे"
  to_uname: "AI" to_raw: "ऐ"
}
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "ꣾꣿ"
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  to_raw: "ꣾ"
}

# SIGN (Candra O|Short O|O|AU|OOE|AW), SIGN (Candra E|Short E|E|AI|OE|AY) → SIGN (Candra O|Short O|O|AU|OOE|AW)
item {
  uname: ["SIGN CANDRA O", "SIGN CANDRA E"] raw: "ॉॅ"
  to_uname: "SIGN CANDRA O" to_raw: "ॉ"
}
item {
  uname: ["SIGN SHORT O", "SIGN SHORT E"] raw: "ॊॆ"
  to_uname: "SIGN SHORT O" to_raw: "ॊ"
}
item {
  uname: ["SIGN O", "SIGN E"] raw: "ोे"
  to_uname: "SIGN O" to_raw: "ो"
}
item {
  uname: ["SIGN AU", "SIGN AI"] raw: "ौै"
  to_uname: "SIGN AU" to_raw: "ौ"
}
item {
  uname: ["SIGN OOE", "SIGN OE"] raw: "ऻऺ"
  to_uname: "SIGN OOE" to_raw: "ऻ"
}
item {
  # TODO: unicodedata module cannot handle these characters.
  # Use icu.Char.charName() to get the names.
  raw: "ॏꣿ"
  to_uname: "SIGN AW" to_raw: "ॏ"
}

# (Candra O|Short O|O|AU|OOE|AW), SIGN (Candra E|Short E|E|AI|OE|AY) → Candra O|Short O|O|AU|OOE|AW
item {
  uname: ["CANDRA O", "SIGN CANDRA E"] raw: "ऑॅ"
  to_uname: "CANDRA O" to_raw: "ऑ"
}
item {
  uname: ["SHORT O", "SIGN SHORT E"] raw: "ऒॆ"
  to_uname: "SHORT O" to_raw: "ऒ"
}
item {
  uname: ["O", "SIGN E"] raw: "ओे"
  to_uname: "O" to_raw: "ओ"
}
item {
  uname: ["AU", "SIGN AI"] raw: "औै"
  to_uname: "AU" to_raw: "औ"
}
item {
  uname: ["OOE", "SIGN OE"] raw: "ॴऺ"
  to_uname: "OOE" to_raw: "ॴ"
}

# Exceptional NFC nukta-composed forms:
# (NNA|RRA|LLA), NUKTA → NNA|RRA|LLA
item {
  uname: ["NNNA", "NUKTA"] raw: "ऩ़"
  to_uname: "NNNA" to_raw: "ऩ"
}
item {
  uname: ["RRA", "NUKTA"] raw: "ऱ़"
  to_uname: "RRA" to_raw: "ऱ"
}
item {
  uname: ["LLLA", "NUKTA"] raw: "ऴ़"
  to_uname: "LLLA" to_raw: "ऴ"
}
