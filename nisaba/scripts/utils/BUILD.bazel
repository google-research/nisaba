# Copyright 2021 Nisaba Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Utility packages.

load("@com_google_protobuf//:protobuf.bzl", "py_proto_library")
load("@nisaba_deps//:requirements.bzl", "requirement")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

py_library(
    name = "far",
    srcs = ["far.py"],
    srcs_version = "PY3",
    visibility = ["//visibility:public"],
    deps = [
        ":file",
        "@org_opengrm_pynini//pynini",
    ],
)

py_test(
    name = "far_test",
    size = "small",
    srcs = ["far_test.py"],
    data = [
        "//nisaba/scripts/brahmic:iso.far",
    ],
    python_version = "PY3",
    srcs_version = "PY3",
    deps = [
        ":far",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

py_library(
    name = "test_util",
    srcs = ["test_util.py"],
    srcs_version = "PY3",
    deps = [
        ":file",
        "@io_abseil_py//absl/testing:absltest",
        "@org_opengrm_pynini//pynini",
        "@org_opengrm_pynini//pynini/lib:utf8",
    ],
)

py_library(
    name = "char",
    srcs = ["char.py"],
    srcs_version = "PY3",
    deps = [
        ":file",
        "@org_opengrm_pynini//pynini",
        "@org_opengrm_pynini//pynini/lib:pynutil",
    ],
)

py_library(
    name = "rule",
    srcs = ["rule.py"],
    srcs_version = "PY3",
    deps = [
        ":file",
        ":rewrite",
        "@org_opengrm_pynini//pynini",
        requirement("networkx"),
        requirement("pandas"),
    ],
)

py_library(
    name = "rewrite",
    srcs = ["rewrite.py"],
    srcs_version = "PY3",
    deps = [
        "@org_opengrm_pynini//pynini",
        "@org_opengrm_pynini//pynini/lib:byte",
    ],
)

py_library(
    name = "file",
    srcs = ["file.py"],
    srcs_version = "PY3",
    deps = [
        "@org_opengrm_pynini//pynini",
        "@org_opengrm_pynini//pynini/lib:byte",
        "@rules_python//python/runfiles",
        requirement("pandas"),
    ],
)

py_library(
    name = "func",
    srcs = ["func.py"],
)

py_test(
    name = "func_test",
    srcs = ["func_test.py"],
    python_version = "PY3",
    deps = [
        ":func",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

proto_library(
    name = "unicode_strings_proto",
    srcs = ["unicode_strings.proto"],
)

py_proto_library(
    name = "unicode_strings_py_pb2",
    # Bazel: This rule is not supported natively (yet). There is a custom
    # Starlark macro supplied by the Bazel team (loaded from `protobuf.bzl` file
    # above). See
    #   https://thethoughtfulkoala.com/posts/2020/05/08/py-protobuf-bazel.html
    srcs = ["unicode_strings.proto"],
)

py_library(
    name = "unicode_strings_util",
    srcs = ["unicode_strings_util.py"],
    srcs_version = "PY3",
    deps = [":unicode_strings_py_pb2"],
)

py_test(
    name = "unicode_strings_util_test",
    srcs = ["unicode_strings_util_test.py"],
    python_version = "PY3",
    srcs_version = "PY3ONLY",
    legacy_create_init = False,
    deps = [
        ":unicode_strings_py_pb2",
        ":unicode_strings_util",
        "@io_abseil_py//absl/testing:absltest",
    ],
)

py_binary(
    name = "unicode_strings_to_tsv",
    srcs = ["unicode_strings_to_tsv.py"],
    python_version = "PY3",
    srcs_version = "PY3",
    # Bazel: There should be no `__init__.py` generated under the `google`
    # directory of the protobuf library. This breaks the `google.protobuf`
    # Python import. Please see
    #   http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap
    legacy_create_init = False,
    deps = [
        ":unicode_strings_py_pb2",
        ":unicode_strings_util",
        "@com_google_protobuf//:protobuf_python",
        "@io_abseil_py//absl:app",
        "@io_abseil_py//absl/flags",
        "@io_abseil_py//absl/logging",
    ],
)
