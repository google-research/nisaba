# Copyright 2023 Nisaba Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Core utility packages.

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

cc_library(
    name = "integral_types",
    hdrs = ["integral_types.h"],
)

cc_library(
    name = "unicode_properties",
    srcs = ["unicode_properties.cc"],
    hdrs = ["unicode_properties.h"],
    linkstatic = True,
    deps = ["@com_google_absl//absl/container:flat_hash_set"],
)

cc_library(
   name = "utf8_delimiters",
   srcs = ["utf8_delimiters.cc"],
   hdrs = ["utf8_delimiters.h"],
   linkstatic = True,
   deps = [
       ":unicode_properties",
       "@com_google_absl//absl/container:flat_hash_set",
       "@com_google_absl//absl/strings",
       "@com_github_utfcpp//:utfcpp",
   ],
)

cc_test(
   name = "utf8_delimiters_test",
   srcs = ["utf8_delimiters_test.cc"],
   linkstatic = True,
   deps = [
       ":utf8_delimiters",
       "@com_google_googletest//:gtest_main",
   ],
)

cc_library(
   name = "status_macros",
   hdrs = ["status_macros.h"],
   visibility = ["//visibility:public"],
   deps = [
       "@com_google_absl//absl/base:core_headers",
       "@com_google_absl//absl/status",
       "@org_openfst//:base"
   ],
)

cc_library(
   name = "status-matchers",
   hdrs = ["status-matchers.h"],
   visibility = ["//visibility:public"],
   deps = [
       ":status_macros",
       "@com_google_absl//absl/status",
       "@com_google_absl//absl/status:statusor",
       "@com_google_googletest//:gtest",
   ],
)

cc_library(
    name = "utf8_util",
    srcs = ["utf8_util.cc"],
    hdrs = ["utf8_util.h"],
    visibility = ["//visibility:public"],
    linkstatic = True,
    deps = [
        ":utf8_delimiters",
        "//nisaba/port:integral_types",
        "@com_github_utfcpp//:utfcpp",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "utf8_util_test",
    srcs = ["utf8_util_test.cc"],
    linkstatic = True,
    deps = [
        ":unicode_properties",
        ":utf8_util",
        "//nisaba/port:status-matchers",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "file_util",
    srcs = ["file_util.cc"],
    hdrs = ["file_util.h"],
    visibility = ["//visibility:public"],
    linkstatic = True,
    deps = [
        "@bazel_tools//tools/cpp/runfiles",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_test(
    name = "file_util_test",
    srcs = ["file_util_test.cc"],
    linkstatic = True,
    deps = [
        ":file_util",
        "//nisaba/port:status-matchers",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
   name = "file",
   srcs = ["file.cc"],
   hdrs = ["file.h"],
   linkstatic = True,
   deps = [
       ":file_util",
       "@com_google_absl//absl/log",
       "@com_google_absl//absl/log:check",
       "@com_google_absl//absl/strings",
       "@com_google_protobuf//:protobuf",
   ],
)

cc_library(
   name = "thread_pool",
   hdrs = ["thread_pool.h"],
   deps = [
       "@com_google_absl//absl/base:core_headers",
       "@com_google_absl//absl/synchronization",
   ],
)

cc_test(
   name = "thread_pool_test",
   srcs = ["thread_pool_test.cc"],
   visibility = ["//visibility:public"],
   linkstatic = True,
   deps = [
       ":thread_pool",
       "@com_google_absl//absl/base:core_headers",
       "@com_google_absl//absl/synchronization",
       "@com_google_googletest//:gtest_main",
   ],
)

cc_library(
    name = "test_utils",
    testonly = 1,
    srcs = ["test_utils.cc"],
    hdrs = ["test_utils.h"],
    visibility = ["//visibility:public"],
    linkstatic = True,
    deps = [
        ":file_util",
        "//nisaba/port:status-matchers",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest",
        "@org_openfst//:base",
    ],
)

cc_library(
    name = "timer",
    hdrs = ["timer.h"],
    visibility = ["//visibility:public"],
    deps = ["@com_google_absl//absl/time"],
)

cc_test(
    name = "timer_test",
    srcs = ["timer_test.cc"],
    linkstatic = True,
    deps = [
        ":timer",
        "//nisaba/port:status-matchers",
        "@com_google_absl//absl/time",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "proto_file_stream",
    srcs = ["proto_file_stream.cc"],
    hdrs = ["proto_file_stream.h"],
    linkstatic = True,
    deps = [
        "//nisaba/port:file",
        "//nisaba/port:status_macros",
        "@com_google_protobuf//:protobuf",
        "@org_openfst//:base",
    ],
)
