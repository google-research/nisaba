name: "linux"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build-and-test-ubuntu:
    name: Build and Test (Ubuntu)
    runs-on: ubuntu-latest
    env:
      BAZEL: bazelisk-linux-amd64
      CC: gcc-10
      CXX: g++-10

    steps:
    - uses: actions/checkout@v3

    - name: Mount bazel cache
      uses: actions/cache@v3
      with:
        # See https://docs.bazel.build/versions/master/output_directories.html
        path: "~/.cache/bazel"
        key: ${{ runner.os }}-bazel-${{ hashFiles('WORKSPACE.bazel') }}
        restore-keys: ${{ runner.os }}-bazel

    - name: Install bazelisk
      run: |
        curl -LO "https://github.com/bazelbuild/bazelisk/releases/latest/download/$BAZEL"
        chmod +x $BAZEL

    - name: Install requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-dev
        sudo pip install --upgrade pip
        sudo pip install -r ./requirements.txt

    - name: Environment variables (debug dump)
      run: |
        echo "====== gcc version:"
        gcc --version
        echo "====== Requested gcc:"
        ${CC} --version
        echo "====== g++ version:"
        g++ --version
        echo "====== Requested g++:"
        ${CXX} --version

    - name: Cleanup disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /usr/local/share/boost
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Build
      run: |
        ./$BAZEL run //:requirements.update
        ./$BAZEL build -c opt //...

    - name: Test
      run: ./$BAZEL test -c opt --test_size_filters=-large,-enormous --test_output=errors //nisaba/...
